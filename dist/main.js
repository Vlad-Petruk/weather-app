(()=>{"use strict";const t=document.querySelector(".input"),e=document.querySelector(".searchBtn"),n=document.querySelector(".weather-card"),o=document.querySelector(".error");async function c(t){const e=await async function(t){try{o.textContent="";const e=await async function(t){try{const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=7a84c19e7f6245b7814141628240402&q=${t}&days=3&aqi=no&alerts=no`,{mode:"cors"}),n=await e.json();if(!n.location)throw new Error("No matching location found");return n}catch(t){console.log(t)}}(t);return null==e&&(o.textContent="No matching location found"),console.log(e),function(t){try{const e={conditions:{icon:t.current.condition.icon,text:t.current.condition.text},temp_c:t.current.temp_c,feelslike_c:t.current.feelslike_c,temp_f:t.current.temp_f,feelslike_f:t.current.feelslike_f,wind_speed:t.current.wind_kph,cloud:t.current.cloud,location:{country:t.location.country,city:t.location.name,time:t.location.localtime}};return console.log(e),e}catch(t){console.log(t)}}(e)}catch(t){console.log(t)}}(t);console.log(e),n.innerHTML="";let c=document.createElement("p");c.textContent=`${e.location.city}, ${e.location.country}`;let i=document.createElement("p");i.textContent=e.location.time;let l=document.createElement("div");l.classList.add("flex-centered");let r=document.createElement("img");r.src=e.conditions.icon;let a=document.createElement("p");a.textContent=e.conditions.text,l.appendChild(r),l.appendChild(a),n.appendChild(c),n.appendChild(i),n.appendChild(l)}e.addEventListener("click",(()=>{c(t.value)})),c("Kamieniec Podolski")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBRUEsTUFBTUEsRUFBWUMsU0FBU0MsY0FBYyxVQUNuQ0MsRUFBWUYsU0FBU0MsY0FBYyxjQUNuQ0UsRUFBY0gsU0FBU0MsY0FBYyxpQkFDckNHLEVBQVdKLFNBQVNDLGNBQWMsVUFxQnhDSSxlQUFlQyxFQUFrQkMsR0FDL0IsTUFBTUMsUUFoQlJILGVBQThCRSxHQUM1QixJQUNFSCxFQUFTSyxZQUFjLEdBQ3ZCLE1BQU1DLFFDZFZMLGVBQXFDTSxHQUNuQyxJQUNFLE1BQU1DLFFBQWlCQyxNQUNyQixxRkFBcUZGLDRCQUNyRixDQUFFRyxLQUFNLFNBRUpDLFFBQW9CSCxFQUFTSSxPQUNuQyxJQUFLRCxFQUFZSixTQUNmLE1BQU0sSUFBSU0sTUFBTSw4QkFFbEIsT0FBT0YsQ0FDVCxDQUFFLE1BQU9HLEdBQ1BDLFFBQVFDLElBQUlGLEVBQ2QsQ0FFRixDRER5QkcsQ0FBc0JkLEdBTTNDLE9BTGNlLE1BQVZaLElBQ0ZOLEVBQVNLLFlBQWMsOEJBRXpCVSxRQUFRQyxJQUFJVixHQ0RoQixTQUE0QkssR0FDMUIsSUFDRSxNQUFNUSxFQUFnQixDQUNwQkMsV0FBWSxDQUNWQyxLQUFNVixFQUFZVyxRQUFRQyxVQUFVRixLQUNwQ0csS0FBTWIsRUFBWVcsUUFBUUMsVUFBVUMsTUFFdENDLE9BQVFkLEVBQVlXLFFBQVFHLE9BQzVCQyxZQUFhZixFQUFZVyxRQUFRSSxZQUNqQ0MsT0FBUWhCLEVBQVlXLFFBQVFLLE9BQzVCQyxZQUFhakIsRUFBWVcsUUFBUU0sWUFDakNDLFdBQVlsQixFQUFZVyxRQUFRUSxTQUNoQ0MsTUFBT3BCLEVBQVlXLFFBQVFTLE1BQzNCeEIsU0FBVSxDQUNSeUIsUUFBU3JCLEVBQVlKLFNBQVN5QixRQUM5QjdCLEtBQU1RLEVBQVlKLFNBQVMwQixLQUMzQkMsS0FBTXZCLEVBQVlKLFNBQVM0QixZQUkvQixPQURBcEIsUUFBUUMsSUFBSUcsR0FDTEEsQ0FDVCxDQUFFLE1BQU9pQixHQUNQckIsUUFBUUMsSUFBSW9CLEVBQ2QsQ0FDRixDRHRCdUJDLENBQW1CL0IsRUFFeEMsQ0FBRSxNQUFPOEIsR0FDUHJCLFFBQVFDLElBQUlvQixFQUNkLENBQ0YsQ0FHZ0NFLENBQWVuQyxHQUM3Q1ksUUFBUUMsSUFBSVosR0FDWkwsRUFBWXdDLFVBQVcsR0FDdkIsSUFBSUMsRUFBVzVDLFNBQVM2QyxjQUFjLEtBQ3RDRCxFQUFTbkMsWUFBYyxHQUFHRCxFQUFnQkcsU0FBU0osU0FBU0MsRUFBZ0JHLFNBQVN5QixVQUNyRixJQUFJVSxFQUFjOUMsU0FBUzZDLGNBQWMsS0FDekNDLEVBQVlyQyxZQUFjRCxFQUFnQkcsU0FBUzJCLEtBRW5ELElBQUlTLEVBQW9CL0MsU0FBUzZDLGNBQWMsT0FDL0NFLEVBQWtCQyxVQUFVQyxJQUFJLGlCQUNoQyxJQUFJQyxFQUFXbEQsU0FBUzZDLGNBQWMsT0FDdENLLEVBQVNDLElBQU0zQyxFQUFnQmdCLFdBQVdDLEtBQzFDLElBQUkyQixFQUFXcEQsU0FBUzZDLGNBQWMsS0FDdENPLEVBQVMzQyxZQUFjRCxFQUFnQmdCLFdBQVdJLEtBQ2xEbUIsRUFBa0JNLFlBQVlILEdBQzlCSCxFQUFrQk0sWUFBWUQsR0FFOUJqRCxFQUFZa0QsWUFBWVQsR0FDeEJ6QyxFQUFZa0QsWUFBWVAsR0FDeEIzQyxFQUFZa0QsWUFBWU4sRUFDMUIsQ0FFQTdDLEVBQVVvRCxpQkFBaUIsU0FBUyxLQUNsQ2hELEVBQWtCUCxFQUFVd0QsTUFBTSxJQUdwQ2pELEVBQWtCLHFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRXZWF0aGVyRGF0YSwgcHJvY2Vzc1dlYXRoZXJEYXRhIH0gZnJvbSBcIi4vYXBpXCI7XG5cbmNvbnN0IHVzZXJJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW5wdXRcIik7XG5jb25zdCBzZWFyY2hCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlYXJjaEJ0blwiKTtcbmNvbnN0IHdlYXRoZXJDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi53ZWF0aGVyLWNhcmRcIik7XG5jb25zdCBlcnJvckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lcnJvcicpO1xuXG5mdW5jdGlvbiBoYW5kbGVJbnB1dCgpe1xuXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHNlcmNoRm9yV2V0aGVyKGNpdHkpIHtcbiAgdHJ5e1xuICAgIGVycm9yRGl2LnRleHRDb250ZW50ID0gJyc7XG4gICAgY29uc3QgbXlEYXRhID0gYXdhaXQgZ2V0Q3VycmVudFdlYXRoZXJEYXRhKGNpdHkpO1xuICAgIGlmIChteURhdGEgPT0gdW5kZWZpbmVkKXtcbiAgICAgIGVycm9yRGl2LnRleHRDb250ZW50ID0gJ05vIG1hdGNoaW5nIGxvY2F0aW9uIGZvdW5kJ1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhteURhdGEpO1xuICAgIGNvbnN0IHBhcnNlZERhdGEgPSBwcm9jZXNzV2VhdGhlckRhdGEobXlEYXRhKTtcbiAgICByZXR1cm4gcGFyc2VkRGF0YVxuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSlcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVXZWF0aGVyQ2FyZChjaXR5KXtcbiAgY29uc3QgY2l0eVdlYXRoZXJEYXRhID0gYXdhaXQgc2VyY2hGb3JXZXRoZXIoY2l0eSk7XG4gIGNvbnNvbGUubG9nKGNpdHlXZWF0aGVyRGF0YSk7XG4gIHdlYXRoZXJDYXJkLmlubmVySFRNTD0gJyc7XG4gIGxldCBjaXR5TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxuICBjaXR5TmFtZS50ZXh0Q29udGVudCA9IGAke2NpdHlXZWF0aGVyRGF0YS5sb2NhdGlvbi5jaXR5fSwgJHtjaXR5V2VhdGhlckRhdGEubG9jYXRpb24uY291bnRyeX1gO1xuICBsZXQgY3VycmVudFRpbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGN1cnJlbnRUaW1lLnRleHRDb250ZW50ID0gY2l0eVdlYXRoZXJEYXRhLmxvY2F0aW9uLnRpbWU7XG5cbiAgbGV0IHdlYXRoZXJDb25kaXRpb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgd2VhdGhlckNvbmRpdGlvbnMuY2xhc3NMaXN0LmFkZCgnZmxleC1jZW50ZXJlZCcpXG4gIGxldCBjb25kSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICBjb25kSWNvbi5zcmMgPSBjaXR5V2VhdGhlckRhdGEuY29uZGl0aW9ucy5pY29uO1xuICBsZXQgY29uZFRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGNvbmRUZXh0LnRleHRDb250ZW50ID0gY2l0eVdlYXRoZXJEYXRhLmNvbmRpdGlvbnMudGV4dDtcbiAgd2VhdGhlckNvbmRpdGlvbnMuYXBwZW5kQ2hpbGQoY29uZEljb24pO1xuICB3ZWF0aGVyQ29uZGl0aW9ucy5hcHBlbmRDaGlsZChjb25kVGV4dCk7XG5cbiAgd2VhdGhlckNhcmQuYXBwZW5kQ2hpbGQoY2l0eU5hbWUpO1xuICB3ZWF0aGVyQ2FyZC5hcHBlbmRDaGlsZChjdXJyZW50VGltZSk7XG4gIHdlYXRoZXJDYXJkLmFwcGVuZENoaWxkKHdlYXRoZXJDb25kaXRpb25zKVxufVxuXG5zZWFyY2hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY3JlYXRlV2VhdGhlckNhcmQodXNlcklucHV0LnZhbHVlKTtcbn0pO1xuXG5jcmVhdGVXZWF0aGVyQ2FyZCgnS2FtaWVuaWVjIFBvZG9sc2tpJykiLCJhc3luYyBmdW5jdGlvbiBnZXRDdXJyZW50V2VhdGhlckRhdGEobG9jYXRpb24pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgICAgYGh0dHBzOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PTdhODRjMTllN2Y2MjQ1Yjc4MTQxNDE2MjgyNDA0MDImcT0ke2xvY2F0aW9ufSZkYXlzPTMmYXFpPW5vJmFsZXJ0cz1ub2AsXG4gICAgICB7IG1vZGU6IFwiY29yc1wiIH0sXG4gICAgKTtcbiAgICBjb25zdCB3ZWF0aGVyRGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBpZiAoIXdlYXRoZXJEYXRhLmxvY2F0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1hdGNoaW5nIGxvY2F0aW9uIGZvdW5kJyk7XG4gIH1cbiAgICByZXR1cm4gd2VhdGhlckRhdGE7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgfVxuXG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NXZWF0aGVyRGF0YSh3ZWF0aGVyRGF0YSkge1xuICB0cnkge1xuICAgIGNvbnN0IG15V2VhdGhlckRhdGEgPSB7XG4gICAgICBjb25kaXRpb25zOiB7XG4gICAgICAgIGljb246IHdlYXRoZXJEYXRhLmN1cnJlbnQuY29uZGl0aW9uLmljb24sXG4gICAgICAgIHRleHQ6IHdlYXRoZXJEYXRhLmN1cnJlbnQuY29uZGl0aW9uLnRleHQsXG4gICAgICB9LFxuICAgICAgdGVtcF9jOiB3ZWF0aGVyRGF0YS5jdXJyZW50LnRlbXBfYyxcbiAgICAgIGZlZWxzbGlrZV9jOiB3ZWF0aGVyRGF0YS5jdXJyZW50LmZlZWxzbGlrZV9jLFxuICAgICAgdGVtcF9mOiB3ZWF0aGVyRGF0YS5jdXJyZW50LnRlbXBfZixcbiAgICAgIGZlZWxzbGlrZV9mOiB3ZWF0aGVyRGF0YS5jdXJyZW50LmZlZWxzbGlrZV9mLFxuICAgICAgd2luZF9zcGVlZDogd2VhdGhlckRhdGEuY3VycmVudC53aW5kX2twaCxcbiAgICAgIGNsb3VkOiB3ZWF0aGVyRGF0YS5jdXJyZW50LmNsb3VkLFxuICAgICAgbG9jYXRpb246IHtcbiAgICAgICAgY291bnRyeTogd2VhdGhlckRhdGEubG9jYXRpb24uY291bnRyeSxcbiAgICAgICAgY2l0eTogd2VhdGhlckRhdGEubG9jYXRpb24ubmFtZSxcbiAgICAgICAgdGltZTogd2VhdGhlckRhdGEubG9jYXRpb24ubG9jYWx0aW1lLFxuICAgICAgfSxcbiAgICB9O1xuICAgIGNvbnNvbGUubG9nKG15V2VhdGhlckRhdGEpO1xuICAgIHJldHVybiBteVdlYXRoZXJEYXRhO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgZ2V0Q3VycmVudFdlYXRoZXJEYXRhLCBwcm9jZXNzV2VhdGhlckRhdGEgfTtcbiJdLCJuYW1lcyI6WyJ1c2VySW5wdXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzZWFyY2hCdG4iLCJ3ZWF0aGVyQ2FyZCIsImVycm9yRGl2IiwiYXN5bmMiLCJjcmVhdGVXZWF0aGVyQ2FyZCIsImNpdHkiLCJjaXR5V2VhdGhlckRhdGEiLCJ0ZXh0Q29udGVudCIsIm15RGF0YSIsImxvY2F0aW9uIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJ3ZWF0aGVyRGF0YSIsImpzb24iLCJFcnJvciIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJnZXRDdXJyZW50V2VhdGhlckRhdGEiLCJ1bmRlZmluZWQiLCJteVdlYXRoZXJEYXRhIiwiY29uZGl0aW9ucyIsImljb24iLCJjdXJyZW50IiwiY29uZGl0aW9uIiwidGV4dCIsInRlbXBfYyIsImZlZWxzbGlrZV9jIiwidGVtcF9mIiwiZmVlbHNsaWtlX2YiLCJ3aW5kX3NwZWVkIiwid2luZF9rcGgiLCJjbG91ZCIsImNvdW50cnkiLCJuYW1lIiwidGltZSIsImxvY2FsdGltZSIsImUiLCJwcm9jZXNzV2VhdGhlckRhdGEiLCJzZXJjaEZvcldldGhlciIsImlubmVySFRNTCIsImNpdHlOYW1lIiwiY3JlYXRlRWxlbWVudCIsImN1cnJlbnRUaW1lIiwid2VhdGhlckNvbmRpdGlvbnMiLCJjbGFzc0xpc3QiLCJhZGQiLCJjb25kSWNvbiIsInNyYyIsImNvbmRUZXh0IiwiYXBwZW5kQ2hpbGQiLCJhZGRFdmVudExpc3RlbmVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9